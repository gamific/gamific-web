@model  Vlast.Gamific.Web.Services.Engine.DTO.MetricEngineDTO

@using (Ajax.BeginForm("Save", "Metric", new AjaxOptions { OnSuccess = "onSucessSaveMetric", OnFailure = "onFailureSaveMetric", UpdateTargetId = "modal-painel" }))
{
    <span style="display:none">
        @Html.HiddenFor(model => model.Id);
    </span>

    <div id="modal-panel">
        <div class="modal-dialog modal-xlg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" title="Fechar" id="btn_close_modal" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="criaNovaMetrica">Criar nova metrica</h4>
                </div>
                <div class="modal-body" id="edit-modal-body">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        @Html.ValidationSummary(true, "", new { @id = "validation-data", @class = "text-danger-summary" })
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-12 modal-div">
                            @Html.LabelFor(model => model.Name, "Nome da Metrica*:", new { @class = "col-sm-12 control-label" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @tabindex = "1" } })
                            @Html.ValidationMessageFor(model => model.Name, "O campo Nome da metrica é obrigatório.", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-6 modal-div">
                            @Html.LabelFor(model => model.Floor, "Valor minimo:", new { @class = "col-sm-12 control-label" })
                            @Html.EditorFor(model => model.Floor, new { htmlAttributes = new { @class = "form-control", @tabindex = "2", min = 0} })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-6 modal-div">
                            @Html.LabelFor(model => model.Ceiling, "Valor maximo:", new { @class = "col-sm-12 control-label" })
                            @Html.EditorFor(model => model.Ceiling, new { htmlAttributes = new { @class = "form-control", @tabindex = "3", min = 0} })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-6 modal-div">
                            @Html.LabelFor(model => model.Multiplier, "Peso*:", new { @class = "col-sm-2 control-label" })
                            @Html.EditorFor(model => model.Multiplier, new { htmlAttributes = new { @class = "form-control", @tabindex = "4", min = 0} })
                            @Html.ValidationMessageFor(model => model.Multiplier, "O campo peso é obrigatório.", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-6 modal-div">
                            @Html.LabelFor(model => model.Xp , "XP:", new { @class = "col-sm-12 control-label" })
                            @Html.EditorFor(model => model.Xp, new { htmlAttributes = new { @class = "form-control", @tabindex = "5", min = 0 } })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-6 modal-div">
                            @Html.LabelFor(model => model.Icon, "Icone*:", new { @class = "col-sm-2 control-label" })
                            <div>
                                <select id="Icon" class="form-control" name="Icon" tabindex="6">
                                    @foreach (SelectListItem icon in ViewBag.Icons)
                                    {
                                        if (icon.Selected == true)
                                        {
                                            <option value="@icon.Value" selected>@icon.Text</option>
                                        }
                                        else
                                        {
                                            <option value="@icon.Value">@icon.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            
                            @Html.ValidationMessageFor(model => model.Icon, "O campo icone é obrigatório.", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-6 modal-div">
                            <div style="margin-top:20px;" id="iconView"></div>
                        </div>
                    </div>
                    
                    
                    <div class="form-group">
                        <div class="col-sm-10 col-md-3 modal-div">
                            <label style="font-size:larger;">É média: 
                                @Html.CheckBoxFor(model => model.IsAverage, Model.IsAverage)
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-10 col-md-3 modal-div">
                            <label style="font-size:larger;">
                                É inverso:
                                @Html.CheckBoxFor(model => model.IsInverse, Model.IsInverse)
                            </label>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Cadastrar</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $('#iconView').append("<i class='fa " + $('#Icon').val() + " fa-3x'></i>");

    $('#Icon').change(function () {
        $('#iconView').empty().append("<i class='fa "+ $(this).val() +" fa-3x'></i>");
    });
</script>

